---
layout: post
title:  NUCLEO-F302R8 wifi IPv6 UDP送信
date:   2024-04-14 9:00:00 +0900
categories: NUCLEO-F302R8
tags: stm32 arm esp32
mermaid: true
---

[NUCLEO-F302R8]({% link _posts/2024-02-18-NUCLEO-F302R8-wifi.markdown %})

NUCLEO-F302R8からUDPでデータを送信します。

## HW構成

UDPサーバは開発PCで作成します。

![HW構成](/assets//images/image-2024-04-14-ipv6-udp-hw.png)

## SW構成

![SW構成](/assets//images/image-2024-04-14-ipv6-udp-sw.png)

## ソケット

FreeRTOS TCPのソケットAPIを使用します。

以下の公式ページを参考にしました。

<https://www.freertos.org/FreeRTOS-Plus/FreeRTOS_Plus_TCP/Networking_Tutorial_Sending_UDP_Data.html>

## シーケンス

```mermaid
sequenceDiagram
    %% participant
    participant taskAppSendUdp
    participant Socket
    participant IPTask
    participant NetworkInterface
    %% main
      taskAppSendUdp->>Socket: create socket
      taskAppSendUdp->>Socket: bind socket
      Socket->>+IPTask: send IP event(eSocketBindEvent)
      loop Every secounds
        taskAppSendUdp->>Socket: send udp
        Socket->>+IPTask: send IP event(eStackTxEvent)
        IPTask->>+NetworkInterface: send ethernet frame
      end
```

## UDPサーバ

サーバはFlutterを使いました。RawDatagramSocketというライブラリでUDPサーバを作成できます。

Flutterはクロスプラットフォームに対応していますが、WebアプリだとRawDatagramSocketが対応していませんでした。私はWindows向けにビルドして動作確認を行いました。

## ソースコード

* UDPクライアント
  * リポジトリ
    * <https://github.com/ohmusso/NUCLEO-F302R8/tree/23141cea7f6d328000433ae207fcdddc66628d6a>
  * 送信部分は以下のコードになります。
    * <https://github.com/ohmusso/NUCLEO-F302R8/blob/23141cea7f6d328000433ae207fcdddc66628d6a/src/app/app.c#L45>
* UDPサーバ
  * リポジトリ
    * <https://github.com/ohmusso/flutter_udp_server/tree/f400bf5ad314a3e1f907c044ddcb838458599f77>
  * 受信部分は以下のコードになります。
    * <https://github.com/ohmusso/flutter_udp_server/blob/f400bf5ad314a3e1f907c044ddcb838458599f77/lib/main.dart#L11>

## 動作確認

### サーバIPアドレスの確認

私はwindows10のノートPCで開発しています。このノートPCのリンクローカルアドレスIPv6アドレスを確認します。サーバとクライアントのソースコードはここで確認した値を設定しています。

![リンクローカルアドレスの確認](/assets/images/image-2024-04-14-ipv6-udp-server-ip.png)

### ESP32のアクセスポイント接続設定

Wiresharkでキャプチャした結果です。fe80::1235がクライアントのIPアドレスです。サーバにUDPのデータを送信する前にNeighbor DiscoveryでサーバのMACアドレスを解決しています。

![動作確認結果 Wireshark](/assets/images/image-2024-04-14-ipv6-udp-wireshark.png)

サーバでUDPのデータを受け取れました。

![動作確認結果 Flutter](/assets/images/image-2024-04-14-ipv6-udp-test.gif)

## 以上
